// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Pdf {
    id          String          @id @default(cuid())
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
    name        String
    url         String
    isPublic    Boolean         @default(false)
    user        User            @relation(fields: [userId], references: [id])
    userId      String
    permissions PdfPermission[]
}

model User {
    id            String          @id @default(cuid())
    name          String?
    email         String?         @unique
    emailVerified DateTime?
    image         String?
    githubId      String?         @unique
    accounts      Account[]
    sessions      Session[]
    pdfs          Pdf[]
    PdfPermission PdfPermission[]
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id])

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique(map: "session_token_unique_constraint")
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PdfPermission {
    id     String  @id @default(cuid())
    pdf    Pdf     @relation(fields: [pdfId], references: [id])
    pdfId  String
    user   User?   @relation(fields: [userId], references: [id])
    userId String?

    @@unique([pdfId, userId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
